//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace IDH.Sales.BLL.DoctorWebReference {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="DoctorWebServiceSoap", Namespace="http://tempuri.org/")]
    public partial class DoctorWebService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback GetDoctorListOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetOrgListOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSpecialitiesOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateDoctorOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDoctorOrgListOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateOrgOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddDoctorOrgOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUnAssignedDoctorsOperationCompleted;
        
        private System.Threading.SendOrPostCallback AssignDoctorOperationCompleted;
        
        private System.Threading.SendOrPostCallback ReassignDoctorOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateSalesRepDoctorOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDoctorCategoryOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public DoctorWebService() {
            this.Url = global::IDH.Sales.BLL.Properties.Settings.Default.IDH_Sales_BLL_DoctorWebReference_DoctorWebService;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event GetDoctorListCompletedEventHandler GetDoctorListCompleted;
        
        /// <remarks/>
        public event GetOrgListCompletedEventHandler GetOrgListCompleted;
        
        /// <remarks/>
        public event GetSpecialitiesCompletedEventHandler GetSpecialitiesCompleted;
        
        /// <remarks/>
        public event CreateDoctorCompletedEventHandler CreateDoctorCompleted;
        
        /// <remarks/>
        public event GetDoctorOrgListCompletedEventHandler GetDoctorOrgListCompleted;
        
        /// <remarks/>
        public event CreateOrgCompletedEventHandler CreateOrgCompleted;
        
        /// <remarks/>
        public event AddDoctorOrgCompletedEventHandler AddDoctorOrgCompleted;
        
        /// <remarks/>
        public event GetUnAssignedDoctorsCompletedEventHandler GetUnAssignedDoctorsCompleted;
        
        /// <remarks/>
        public event AssignDoctorCompletedEventHandler AssignDoctorCompleted;
        
        /// <remarks/>
        public event ReassignDoctorCompletedEventHandler ReassignDoctorCompleted;
        
        /// <remarks/>
        public event UpdateSalesRepDoctorCompletedEventHandler UpdateSalesRepDoctorCompleted;
        
        /// <remarks/>
        public event GetDoctorCategoryCompletedEventHandler GetDoctorCategoryCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetDoctorList", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public YKN_P_GetProfessionalList_Result[] GetDoctorList(string _RoleID, int _CompanyID, string _UserID, int _OwnList) {
            object[] results = this.Invoke("GetDoctorList", new object[] {
                        _RoleID,
                        _CompanyID,
                        _UserID,
                        _OwnList});
            return ((YKN_P_GetProfessionalList_Result[])(results[0]));
        }
        
        /// <remarks/>
        public void GetDoctorListAsync(string _RoleID, int _CompanyID, string _UserID, int _OwnList) {
            this.GetDoctorListAsync(_RoleID, _CompanyID, _UserID, _OwnList, null);
        }
        
        /// <remarks/>
        public void GetDoctorListAsync(string _RoleID, int _CompanyID, string _UserID, int _OwnList, object userState) {
            if ((this.GetDoctorListOperationCompleted == null)) {
                this.GetDoctorListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDoctorListOperationCompleted);
            }
            this.InvokeAsync("GetDoctorList", new object[] {
                        _RoleID,
                        _CompanyID,
                        _UserID,
                        _OwnList}, this.GetDoctorListOperationCompleted, userState);
        }
        
        private void OnGetDoctorListOperationCompleted(object arg) {
            if ((this.GetDoctorListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDoctorListCompleted(this, new GetDoctorListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetOrgList", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public YKN_P_GetOrgList_Result[] GetOrgList(int _CompanyID) {
            object[] results = this.Invoke("GetOrgList", new object[] {
                        _CompanyID});
            return ((YKN_P_GetOrgList_Result[])(results[0]));
        }
        
        /// <remarks/>
        public void GetOrgListAsync(int _CompanyID) {
            this.GetOrgListAsync(_CompanyID, null);
        }
        
        /// <remarks/>
        public void GetOrgListAsync(int _CompanyID, object userState) {
            if ((this.GetOrgListOperationCompleted == null)) {
                this.GetOrgListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetOrgListOperationCompleted);
            }
            this.InvokeAsync("GetOrgList", new object[] {
                        _CompanyID}, this.GetOrgListOperationCompleted, userState);
        }
        
        private void OnGetOrgListOperationCompleted(object arg) {
            if ((this.GetOrgListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetOrgListCompleted(this, new GetOrgListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetSpecialities", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public YKN_P_GetSpecialityList_Result[] GetSpecialities(int _CompanyID) {
            object[] results = this.Invoke("GetSpecialities", new object[] {
                        _CompanyID});
            return ((YKN_P_GetSpecialityList_Result[])(results[0]));
        }
        
        /// <remarks/>
        public void GetSpecialitiesAsync(int _CompanyID) {
            this.GetSpecialitiesAsync(_CompanyID, null);
        }
        
        /// <remarks/>
        public void GetSpecialitiesAsync(int _CompanyID, object userState) {
            if ((this.GetSpecialitiesOperationCompleted == null)) {
                this.GetSpecialitiesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSpecialitiesOperationCompleted);
            }
            this.InvokeAsync("GetSpecialities", new object[] {
                        _CompanyID}, this.GetSpecialitiesOperationCompleted, userState);
        }
        
        private void OnGetSpecialitiesOperationCompleted(object arg) {
            if ((this.GetSpecialitiesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSpecialitiesCompleted(this, new GetSpecialitiesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CreateDoctor", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void CreateDoctor(System.Guid _Guid, System.Guid _UserID, int _Status, string _DoctorName, int _DoctorCategory, string _Mobile, System.Guid _SpecialityID, int _CompanyID) {
            this.Invoke("CreateDoctor", new object[] {
                        _Guid,
                        _UserID,
                        _Status,
                        _DoctorName,
                        _DoctorCategory,
                        _Mobile,
                        _SpecialityID,
                        _CompanyID});
        }
        
        /// <remarks/>
        public void CreateDoctorAsync(System.Guid _Guid, System.Guid _UserID, int _Status, string _DoctorName, int _DoctorCategory, string _Mobile, System.Guid _SpecialityID, int _CompanyID) {
            this.CreateDoctorAsync(_Guid, _UserID, _Status, _DoctorName, _DoctorCategory, _Mobile, _SpecialityID, _CompanyID, null);
        }
        
        /// <remarks/>
        public void CreateDoctorAsync(System.Guid _Guid, System.Guid _UserID, int _Status, string _DoctorName, int _DoctorCategory, string _Mobile, System.Guid _SpecialityID, int _CompanyID, object userState) {
            if ((this.CreateDoctorOperationCompleted == null)) {
                this.CreateDoctorOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateDoctorOperationCompleted);
            }
            this.InvokeAsync("CreateDoctor", new object[] {
                        _Guid,
                        _UserID,
                        _Status,
                        _DoctorName,
                        _DoctorCategory,
                        _Mobile,
                        _SpecialityID,
                        _CompanyID}, this.CreateDoctorOperationCompleted, userState);
        }
        
        private void OnCreateDoctorOperationCompleted(object arg) {
            if ((this.CreateDoctorCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateDoctorCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetDoctorOrgList", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public YKN_P_GetProfissionalOrgList_Result[] GetDoctorOrgList(System.Guid _DoctorID, int _CompanyID) {
            object[] results = this.Invoke("GetDoctorOrgList", new object[] {
                        _DoctorID,
                        _CompanyID});
            return ((YKN_P_GetProfissionalOrgList_Result[])(results[0]));
        }
        
        /// <remarks/>
        public void GetDoctorOrgListAsync(System.Guid _DoctorID, int _CompanyID) {
            this.GetDoctorOrgListAsync(_DoctorID, _CompanyID, null);
        }
        
        /// <remarks/>
        public void GetDoctorOrgListAsync(System.Guid _DoctorID, int _CompanyID, object userState) {
            if ((this.GetDoctorOrgListOperationCompleted == null)) {
                this.GetDoctorOrgListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDoctorOrgListOperationCompleted);
            }
            this.InvokeAsync("GetDoctorOrgList", new object[] {
                        _DoctorID,
                        _CompanyID}, this.GetDoctorOrgListOperationCompleted, userState);
        }
        
        private void OnGetDoctorOrgListOperationCompleted(object arg) {
            if ((this.GetDoctorOrgListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDoctorOrgListCompleted(this, new GetDoctorOrgListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CreateOrg", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void CreateOrg(System.Guid _Guid, System.Guid _UserID, int _Status, string _OrgName, string _OrgAddress, string _OrgPhone, int _CompanyID) {
            this.Invoke("CreateOrg", new object[] {
                        _Guid,
                        _UserID,
                        _Status,
                        _OrgName,
                        _OrgAddress,
                        _OrgPhone,
                        _CompanyID});
        }
        
        /// <remarks/>
        public void CreateOrgAsync(System.Guid _Guid, System.Guid _UserID, int _Status, string _OrgName, string _OrgAddress, string _OrgPhone, int _CompanyID) {
            this.CreateOrgAsync(_Guid, _UserID, _Status, _OrgName, _OrgAddress, _OrgPhone, _CompanyID, null);
        }
        
        /// <remarks/>
        public void CreateOrgAsync(System.Guid _Guid, System.Guid _UserID, int _Status, string _OrgName, string _OrgAddress, string _OrgPhone, int _CompanyID, object userState) {
            if ((this.CreateOrgOperationCompleted == null)) {
                this.CreateOrgOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateOrgOperationCompleted);
            }
            this.InvokeAsync("CreateOrg", new object[] {
                        _Guid,
                        _UserID,
                        _Status,
                        _OrgName,
                        _OrgAddress,
                        _OrgPhone,
                        _CompanyID}, this.CreateOrgOperationCompleted, userState);
        }
        
        private void OnCreateOrgOperationCompleted(object arg) {
            if ((this.CreateOrgCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateOrgCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AddDoctorOrg", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void AddDoctorOrg(System.Guid _Guid, System.Guid _DoctorID, System.Guid _OrgID, int _CompanyID) {
            this.Invoke("AddDoctorOrg", new object[] {
                        _Guid,
                        _DoctorID,
                        _OrgID,
                        _CompanyID});
        }
        
        /// <remarks/>
        public void AddDoctorOrgAsync(System.Guid _Guid, System.Guid _DoctorID, System.Guid _OrgID, int _CompanyID) {
            this.AddDoctorOrgAsync(_Guid, _DoctorID, _OrgID, _CompanyID, null);
        }
        
        /// <remarks/>
        public void AddDoctorOrgAsync(System.Guid _Guid, System.Guid _DoctorID, System.Guid _OrgID, int _CompanyID, object userState) {
            if ((this.AddDoctorOrgOperationCompleted == null)) {
                this.AddDoctorOrgOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddDoctorOrgOperationCompleted);
            }
            this.InvokeAsync("AddDoctorOrg", new object[] {
                        _Guid,
                        _DoctorID,
                        _OrgID,
                        _CompanyID}, this.AddDoctorOrgOperationCompleted, userState);
        }
        
        private void OnAddDoctorOrgOperationCompleted(object arg) {
            if ((this.AddDoctorOrgCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddDoctorOrgCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetUnAssignedDoctors", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public YKN_P_GetUnAssignedProfessionals_Result[] GetUnAssignedDoctors(int _CompanyID) {
            object[] results = this.Invoke("GetUnAssignedDoctors", new object[] {
                        _CompanyID});
            return ((YKN_P_GetUnAssignedProfessionals_Result[])(results[0]));
        }
        
        /// <remarks/>
        public void GetUnAssignedDoctorsAsync(int _CompanyID) {
            this.GetUnAssignedDoctorsAsync(_CompanyID, null);
        }
        
        /// <remarks/>
        public void GetUnAssignedDoctorsAsync(int _CompanyID, object userState) {
            if ((this.GetUnAssignedDoctorsOperationCompleted == null)) {
                this.GetUnAssignedDoctorsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUnAssignedDoctorsOperationCompleted);
            }
            this.InvokeAsync("GetUnAssignedDoctors", new object[] {
                        _CompanyID}, this.GetUnAssignedDoctorsOperationCompleted, userState);
        }
        
        private void OnGetUnAssignedDoctorsOperationCompleted(object arg) {
            if ((this.GetUnAssignedDoctorsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUnAssignedDoctorsCompleted(this, new GetUnAssignedDoctorsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AssignDoctor", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void AssignDoctor(System.Guid _Guid, System.Guid _DoctorID, System.Guid _SalesRepID, int _CompanyID) {
            this.Invoke("AssignDoctor", new object[] {
                        _Guid,
                        _DoctorID,
                        _SalesRepID,
                        _CompanyID});
        }
        
        /// <remarks/>
        public void AssignDoctorAsync(System.Guid _Guid, System.Guid _DoctorID, System.Guid _SalesRepID, int _CompanyID) {
            this.AssignDoctorAsync(_Guid, _DoctorID, _SalesRepID, _CompanyID, null);
        }
        
        /// <remarks/>
        public void AssignDoctorAsync(System.Guid _Guid, System.Guid _DoctorID, System.Guid _SalesRepID, int _CompanyID, object userState) {
            if ((this.AssignDoctorOperationCompleted == null)) {
                this.AssignDoctorOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAssignDoctorOperationCompleted);
            }
            this.InvokeAsync("AssignDoctor", new object[] {
                        _Guid,
                        _DoctorID,
                        _SalesRepID,
                        _CompanyID}, this.AssignDoctorOperationCompleted, userState);
        }
        
        private void OnAssignDoctorOperationCompleted(object arg) {
            if ((this.AssignDoctorCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AssignDoctorCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ReassignDoctor", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void ReassignDoctor(System.Guid _Guid, System.Guid _UserID, System.Guid _ProfessionalID, System.Guid _SalesRepID, int _CompanyID) {
            this.Invoke("ReassignDoctor", new object[] {
                        _Guid,
                        _UserID,
                        _ProfessionalID,
                        _SalesRepID,
                        _CompanyID});
        }
        
        /// <remarks/>
        public void ReassignDoctorAsync(System.Guid _Guid, System.Guid _UserID, System.Guid _ProfessionalID, System.Guid _SalesRepID, int _CompanyID) {
            this.ReassignDoctorAsync(_Guid, _UserID, _ProfessionalID, _SalesRepID, _CompanyID, null);
        }
        
        /// <remarks/>
        public void ReassignDoctorAsync(System.Guid _Guid, System.Guid _UserID, System.Guid _ProfessionalID, System.Guid _SalesRepID, int _CompanyID, object userState) {
            if ((this.ReassignDoctorOperationCompleted == null)) {
                this.ReassignDoctorOperationCompleted = new System.Threading.SendOrPostCallback(this.OnReassignDoctorOperationCompleted);
            }
            this.InvokeAsync("ReassignDoctor", new object[] {
                        _Guid,
                        _UserID,
                        _ProfessionalID,
                        _SalesRepID,
                        _CompanyID}, this.ReassignDoctorOperationCompleted, userState);
        }
        
        private void OnReassignDoctorOperationCompleted(object arg) {
            if ((this.ReassignDoctorCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ReassignDoctorCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateSalesRepDoctor", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void UpdateSalesRepDoctor(System.Guid _Guid, System.Guid _DoctorID, System.Guid _SalesRepID, int _CompanyID) {
            this.Invoke("UpdateSalesRepDoctor", new object[] {
                        _Guid,
                        _DoctorID,
                        _SalesRepID,
                        _CompanyID});
        }
        
        /// <remarks/>
        public void UpdateSalesRepDoctorAsync(System.Guid _Guid, System.Guid _DoctorID, System.Guid _SalesRepID, int _CompanyID) {
            this.UpdateSalesRepDoctorAsync(_Guid, _DoctorID, _SalesRepID, _CompanyID, null);
        }
        
        /// <remarks/>
        public void UpdateSalesRepDoctorAsync(System.Guid _Guid, System.Guid _DoctorID, System.Guid _SalesRepID, int _CompanyID, object userState) {
            if ((this.UpdateSalesRepDoctorOperationCompleted == null)) {
                this.UpdateSalesRepDoctorOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateSalesRepDoctorOperationCompleted);
            }
            this.InvokeAsync("UpdateSalesRepDoctor", new object[] {
                        _Guid,
                        _DoctorID,
                        _SalesRepID,
                        _CompanyID}, this.UpdateSalesRepDoctorOperationCompleted, userState);
        }
        
        private void OnUpdateSalesRepDoctorOperationCompleted(object arg) {
            if ((this.UpdateSalesRepDoctorCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateSalesRepDoctorCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetDoctorCategory", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public YKN_PH_GetProfessionalTier_Result[] GetDoctorCategory() {
            object[] results = this.Invoke("GetDoctorCategory", new object[0]);
            return ((YKN_PH_GetProfessionalTier_Result[])(results[0]));
        }
        
        /// <remarks/>
        public void GetDoctorCategoryAsync() {
            this.GetDoctorCategoryAsync(null);
        }
        
        /// <remarks/>
        public void GetDoctorCategoryAsync(object userState) {
            if ((this.GetDoctorCategoryOperationCompleted == null)) {
                this.GetDoctorCategoryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDoctorCategoryOperationCompleted);
            }
            this.InvokeAsync("GetDoctorCategory", new object[0], this.GetDoctorCategoryOperationCompleted, userState);
        }
        
        private void OnGetDoctorCategoryOperationCompleted(object arg) {
            if ((this.GetDoctorCategoryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDoctorCategoryCompleted(this, new GetDoctorCategoryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3056.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class YKN_P_GetProfessionalList_Result {
        
        private System.Guid professionalGuidField;
        
        private string professionalNameField;
        
        private string specialityField;
        
        private string new_MobileNumberField;
        
        private string salesRepNameField;
        
        private System.Nullable<int> classField;
        
        /// <remarks/>
        public System.Guid professionalGuid {
            get {
                return this.professionalGuidField;
            }
            set {
                this.professionalGuidField = value;
            }
        }
        
        /// <remarks/>
        public string ProfessionalName {
            get {
                return this.professionalNameField;
            }
            set {
                this.professionalNameField = value;
            }
        }
        
        /// <remarks/>
        public string speciality {
            get {
                return this.specialityField;
            }
            set {
                this.specialityField = value;
            }
        }
        
        /// <remarks/>
        public string new_MobileNumber {
            get {
                return this.new_MobileNumberField;
            }
            set {
                this.new_MobileNumberField = value;
            }
        }
        
        /// <remarks/>
        public string salesRepName {
            get {
                return this.salesRepNameField;
            }
            set {
                this.salesRepNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> Class {
            get {
                return this.classField;
            }
            set {
                this.classField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3056.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class YKN_PH_GetProfessionalTier_Result {
        
        private string tierValueField;
        
        private string idField;
        
        /// <remarks/>
        public string TierValue {
            get {
                return this.tierValueField;
            }
            set {
                this.tierValueField = value;
            }
        }
        
        /// <remarks/>
        public string ID {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3056.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class YKN_P_GetUnAssignedProfessionals_Result {
        
        private System.Guid professionalGuidField;
        
        private string professionalNameField;
        
        /// <remarks/>
        public System.Guid professionalGuid {
            get {
                return this.professionalGuidField;
            }
            set {
                this.professionalGuidField = value;
            }
        }
        
        /// <remarks/>
        public string ProfessionalName {
            get {
                return this.professionalNameField;
            }
            set {
                this.professionalNameField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3056.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class YKN_P_GetProfissionalOrgList_Result {
        
        private string nameField;
        
        private System.Guid orgGUIDField;
        
        /// <remarks/>
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public System.Guid OrgGUID {
            get {
                return this.orgGUIDField;
            }
            set {
                this.orgGUIDField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3056.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class YKN_P_GetSpecialityList_Result {
        
        private string specialityNameField;
        
        private System.Guid specialityIDField;
        
        /// <remarks/>
        public string SpecialityName {
            get {
                return this.specialityNameField;
            }
            set {
                this.specialityNameField = value;
            }
        }
        
        /// <remarks/>
        public System.Guid SpecialityID {
            get {
                return this.specialityIDField;
            }
            set {
                this.specialityIDField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3056.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class YKN_P_GetOrgList_Result {
        
        private string nameField;
        
        private string adressField;
        
        private System.Guid orgGUIDField;
        
        /// <remarks/>
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public string adress {
            get {
                return this.adressField;
            }
            set {
                this.adressField = value;
            }
        }
        
        /// <remarks/>
        public System.Guid OrgGUID {
            get {
                return this.orgGUIDField;
            }
            set {
                this.orgGUIDField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void GetDoctorListCompletedEventHandler(object sender, GetDoctorListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDoctorListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDoctorListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public YKN_P_GetProfessionalList_Result[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((YKN_P_GetProfessionalList_Result[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void GetOrgListCompletedEventHandler(object sender, GetOrgListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetOrgListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetOrgListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public YKN_P_GetOrgList_Result[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((YKN_P_GetOrgList_Result[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void GetSpecialitiesCompletedEventHandler(object sender, GetSpecialitiesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSpecialitiesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSpecialitiesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public YKN_P_GetSpecialityList_Result[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((YKN_P_GetSpecialityList_Result[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void CreateDoctorCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void GetDoctorOrgListCompletedEventHandler(object sender, GetDoctorOrgListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDoctorOrgListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDoctorOrgListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public YKN_P_GetProfissionalOrgList_Result[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((YKN_P_GetProfissionalOrgList_Result[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void CreateOrgCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void AddDoctorOrgCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void GetUnAssignedDoctorsCompletedEventHandler(object sender, GetUnAssignedDoctorsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUnAssignedDoctorsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUnAssignedDoctorsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public YKN_P_GetUnAssignedProfessionals_Result[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((YKN_P_GetUnAssignedProfessionals_Result[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void AssignDoctorCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void ReassignDoctorCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void UpdateSalesRepDoctorCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void GetDoctorCategoryCompletedEventHandler(object sender, GetDoctorCategoryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDoctorCategoryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDoctorCategoryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public YKN_PH_GetProfessionalTier_Result[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((YKN_PH_GetProfessionalTier_Result[])(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591